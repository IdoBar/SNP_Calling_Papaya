@article{garrisonVariationGraphToolkit2018a,
  title = {Variation Graph Toolkit Improves Read Mapping by Representing Genetic Variation in the Reference},
  author = {Garrison, Erik and Sir\'en, Jouni and Novak, Adam M. and Hickey, Glenn and Eizenga, Jordan M. and Dawson, Eric T. and Jones, William and Garg, Shilpa and Markello, Charles and Lin, Michael F. and Paten, Benedict and Durbin, Richard},
  date = {2018-09},
  journaltitle = {Nature Biotechnology},
  shortjournal = {Nat. Biotechnol.},
  volume = {36},
  number = {9},
  pages = {875--879},
  publisher = {Nature Publishing Group},
  issn = {1546-1696},
  doi = {10.1038/nbt.4227},
  abstract = {Reducing read mapping bias and improving complex variant detection with a highly scalable computational toolkit that implements variation graphs.},
  langid = {english},
  keywords = {Computational biology and bioinformatics,Genome informatics,Sequencing,Software}
}

@article{sirenPangenomicsEnablesGenotyping2021,
  title = {Pangenomics Enables Genotyping of Known Structural Variants in 5202 Diverse Genomes},
  author = {Sir\'en, Jouni and Monlong, Jean and Chang, Xian and Novak, Adam M. and Eizenga, Jordan M. and Markello, Charles and Sibbesen, Jonas A. and Hickey, Glenn and Chang, Pi-Chuan and Carroll, Andrew and Gupta, Namrata and Gabriel, Stacey and Blackwell, Thomas W. and Ratan, Aakrosh and Taylor, Kent D. and Rich, Stephen S. and Rotter, Jerome I. and Haussler, David and Garrison, Erik and Paten, Benedict},
  date = {2021-12-17},
  journaltitle = {Science},
  shortjournal = {Science},
  volume = {374},
  number = {6574},
  pages = {abg8871},
  publisher = {American Association for the Advancement of Science},
  doi = {10.1126/science.abg8871},
  abstract = {We introduce Giraffe, a pangenome short-read mapper that can efficiently map to a collection of haplotypes threaded through a sequence graph. Giraffe maps sequencing reads to thousands of human genomes at a speed comparable to that of standard methods mapping to a single reference genome. The increased mapping accuracy enables downstream improvements in genome-wide genotyping pipelines for both small variants and larger structural variants. We used Giraffe to genotype 167,000 structural variants, discovered in long-read studies, in 5202 diverse human genomes that were sequenced using short reads. We conclude that pangenomics facilitates a more comprehensive characterization of variation and, as a result, has the potential to improve many genomic analyses.},
  langid = {english}
}

@article{eblerPangenomebasedGenomeInference2022,
  title = {Pangenome-Based Genome Inference Allows Efficient and Accurate Genotyping across a Wide Spectrum of Variant Classes},
  author = {Ebler, Jana and Ebert, Peter and Clarke, Wayne E. and Rausch, Tobias and Audano, Peter A. and Houwaart, Torsten and Mao, Yafei and Korbel, Jan O. and Eichler, Evan E. and Zody, Michael C. and Dilthey, Alexander T. and Marschall, Tobias},
  date = {2022},
  journaltitle = {Nature Genetics},
  shortjournal = {Nat. Genet.},
  volume = {54},
  number = {4},
  eprint = {35410384},
  eprinttype = {pubmed},
  pages = {518--525},
  issn = {1061-4036},
  doi = {10.1038/s41588-022-01043-w},
  abstract = {Typical genotyping workflows map reads to a reference genome before identifying genetic variants. Generating such alignments introduces reference biases and comes with substantial computational burden. Furthermore, short-read lengths limit the ability to characterize repetitive genomic regions, which are particularly challenging for fast k-mer-based genotypers. In the present study, we propose a new algorithm, PanGenie, that leverages a haplotype-resolved pangenome reference together with k-mer counts from short-read sequencing data to genotype a wide spectrum of genetic variation---a process we refer to as genome inference. Compared with mapping-based approaches, PanGenie is more than 4 times faster at 30-fold coverage and achieves better genotype concordances for almost all variant types and coverages tested. Improvements are especially pronounced for large insertions ({$\geq$}50\,bp) and variants in repetitive regions, enabling the inclusion of these classes of variants in genome-wide association studies. PanGenie efficiently leverages the increasing amount of haplotype-resolved assemblies to unravel the functional impact of previously inaccessible variants while being faster compared with alignment-based workflows., PanGenie is an alignment-free, k-mer-based tool that utilizes a haplotype-resolved pangenome reference to genotype a wide range of variants.},
  langid = {english},
  pmcid = {PMC9005351}
}

@article{ExploringExploitingPangenomics2019,
  title = {Exploring and {{Exploiting Pan-genomics}} for {{Crop Improvement}}},
  date = {2019-02-04},
  journaltitle = {Molecular Plant},
  volume = {12},
  number = {2},
  pages = {156--169},
  publisher = {Cell Press},
  issn = {1674-2052},
  doi = {10.1016/j.molp.2018.12.016},
  abstract = {Genetic variation ranging from single-nucleotide polymorphisms to large structural variants (SVs) can cause variation of gene content among individual\dots},
  langid = {english}
}

@article{fernandez-de-bobadillaPATOPangenomeAnalysis2021,
  title = {{{PATO}}: Pangenome Analysis Toolkit},
  shorttitle = {Pato},
  author = {Fern\'andez-de-Bobadilla, Miguel D and Talavera-Rodr\'iguez, Alba and Chac\'on, Luc\'ia and Baquero, Fernando and Coque, Teresa M and Lanza, Val F},
  date = {2021-12-07},
  journaltitle = {Bioinformatics},
  shortjournal = {Bioinformatics},
  volume = {37},
  number = {23},
  pages = {4564--4566},
  issn = {1367-4803},
  doi = {10.1093/bioinformatics/btab697},
  abstract = {We present the Pangenome Analysis Toolkit (PATO) designed to simultaneously analyze thousands of genomes using a desktop computer. The tool performs common tasks of pangenome analysis such as core-genome definition and accessory genome properties and includes new features that help characterize population structure, annotate pathogenic features and create gene sharedness networks. PATO has been developed in R to integrate with the large set of tools available for genetic, phylogenetic and statistical analysis in this environment.PATO can perform the most demanding bioinformatic analyses in minutes with an accuracy comparable to state-of-the-art software but 20--30\texttimes{} times faster. PATO also integrates all the necessary functions for the complete analysis of the most common objectives in microbiology studies. Finally, PATO includes the necessary tools for visualizing the results and can be integrated with other analytical packages available in R.The source code for PATO is freely available at https://github.com/irycisBioinfo/PATO under the GPLv3 license.Supplementary data are available at Bioinformatics online.},
  langid = {english}
}

@article{garrisonUnbiasedPangenomeGraphs2023,
  title = {Unbiased Pangenome Graphs},
  author = {Garrison, Erik and Guarracino, Andrea},
  editor = {Alkan, Can},
  date = {2023-01-01},
  journaltitle = {Bioinformatics},
  shortjournal = {Bioinformatics},
  volume = {39},
  number = {1},
  pages = {btac743},
  issn = {1367-4811},
  doi = {10.1093/bioinformatics/btac743},
  abstract = {Abstract                            Motivation               Pangenome variation graphs model the mutual alignment of collections of DNA sequences. A set of pairwise alignments implies a variation graph, but there are no scalable methods to generate such a graph from these alignments. Existing related approaches depend on a single reference, a specific ordering of genomes or a de Bruijn model based on a fixed k-mer length. A scalable, self-contained method to build pangenome graphs without such limitations would be a key step in pangenome construction and manipulation pipelines.                                         Results               We design the seqwish algorithm, which builds a variation graph from a set of sequences and alignments between them. We first transform the alignment set into an implicit interval tree. To build up the variation graph, we query this tree-based representation of the alignments to reduce transitive matches into single DNA segments in a sequence graph. By recording the mapping from input sequence to output graph, we can trace the original paths through this graph, yielding a pangenome variation graph. We present an implementation that operates in external memory, using disk-backed data structures and lock-free parallel methods to drive the core graph induction step. We demonstrate that our method scales to very large graph induction problems by applying it to build pangenome graphs for several species.                                         Availability and implementation               seqwish is published as free software under the MIT open source license. Source code and documentation are available at https://github.com/ekg/seqwish. seqwish can be installed via Bioconda https://bioconda.github.io/recipes/seqwish/README.html or GNU Guix https://github.com/ekg/guix-genomics/blob/master/seqwish.scm.},
  langid = {american}
}

@article{gryttenAssessingGraphbasedRead2020,
  title = {Assessing Graph-Based Read Mappers against a Baseline Approach Highlights Strengths and Weaknesses of Current Methods},
  author = {Grytten, Ivar and Rand, Knut D. and Nederbragt, Alexander J. and Sandve, Geir K.},
  date = {2020-04-06},
  journaltitle = {BMC Genomics},
  shortjournal = {BMC Genomics},
  volume = {21},
  number = {1},
  pages = {282},
  issn = {1471-2164},
  doi = {10.1186/s12864-020-6685-y},
  abstract = {Graph-based reference genomes have become popular as they allow read mapping and follow-up analyses in settings where the exact haplotypes underlying a high-throughput sequencing experiment are not precisely known. Two recent papers show that mapping to graph-based reference genomes can improve accuracy as compared to methods using linear references. Both of these methods index the sequences for most paths up to a certain length in the graph in order to enable direct mapping of reads containing common variants. However, the combinatorial explosion of possible paths through nearby variants also leads to a huge search space and an increased chance of false positive alignments to highly variable regions.},
  langid = {english},
  keywords = {Graph genomes,Graph-based references,Pan-genomics,Read mapping,Reference genomes,Sequence alignment}
}

@article{heumosClusterefficientPangenomeGraph2024,
  title = {Cluster-Efficient Pangenome Graph Construction with Nf-Core/Pangenome},
  author = {Heumos, Simon and Heuer, Michael L and Hanssen, Friederike and Heumos, Lukas and Guarracino, Andrea and Heringer, Peter and Ehmele, Philipp and Prins, Pjotr and Garrison, Erik and Nahnsen, Sven},
  date = {2024-11-01},
  journaltitle = {Bioinformatics},
  shortjournal = {Bioinformatics},
  volume = {40},
  number = {11},
  pages = {btae609},
  issn = {1367-4811},
  doi = {10.1093/bioinformatics/btae609},
  abstract = {Pangenome graphs offer a comprehensive way of capturing genomic variability across multiple genomes. However, current construction methods often introduce biases, excluding complex sequences or relying on references. The PanGenome Graph Builder (PGGB) addresses these issues. To date, though, there is no state-of-the-art pipeline allowing for easy deployment, efficient and dynamic use of available resources, and scalable usage at the same time.To overcome these limitations, we present nf-core/pangenome, a reference-unbiased approach implemented in Nextflow following nf-core's best practices. Leveraging biocontainers ensures portability and seamless deployment in High-Performance Computing (HPC) environments. Unlike PGGB, nf-core/pangenome distributes alignments across cluster nodes, enabling scalability. Demonstrating its efficiency, we constructed pangenome graphs for 1000 human chromosome 19 haplotypes and 2146 Escherichia coli sequences, achieving a two to threefold speedup compared to PGGB without increasing greenhouse gas emissions.nf-core/pangenome is released under the MIT open-source license, available on GitHub and Zenodo, with documentation accessible at https://nf-co.re/pangenome/docs/usage.},
  langid = {english}
}

@article{hickeyPangenomeGraphConstruction2024,
  title = {Pangenome Graph Construction from Genome Alignments with {{Minigraph-Cactus}}},
  author = {Hickey, Glenn and Monlong, Jean and Ebler, Jana and Novak, Adam M. and Eizenga, Jordan M. and Gao, Yan and {Human Pangenome Reference Consortium} and Abel, Haley J. and Antonacci-Fulton, Lucinda L. and Asri, Mobin and Baid, Gunjan and Baker, Carl A. and Belyaeva, Anastasiya and Billis, Konstantinos and Bourque, Guillaume and Buonaiuto, Silvia and Carroll, Andrew and Chaisson, Mark J. P. and Chang, Pi-Chuan and Chang, Xian H. and Cheng, Haoyu and Chu, Justin and Cody, Sarah and Colonna, Vincenza and Cook, Daniel E. and Cook-Deegan, Robert M. and Cornejo, Omar E. and Diekhans, Mark and Doerr, Daniel and Ebert, Peter and Ebler, Jana and Eichler, Evan E. and Fairley, Susan and Fedrigo, Olivier and Felsenfeld, Adam L. and Feng, Xiaowen and Fischer, Christian and Flicek, Paul and Formenti, Giulio and Frankish, Adam and Fulton, Robert S. and Garg, Shilpa and Garrison, Erik and Garrison, Nanibaa' A. and Giron, Carlos Garcia and Green, Richard E. and Groza, Cristian and Guarracino, Andrea and Haggerty, Leanne and Hall, Ira M. and Harvey, William T. and Haukness, Marina and Haussler, David and Heumos, Simon and Hoekzema, Kendra and Hourlier, Thibaut and Howe, Kerstin and Jain, Miten and Jarvis, Erich D. and Ji, Hanlee P. and Kenny, Eimear E. and Koenig, Barbara A. and Kolesnikov, Alexey and Korbel, Jan O. and Kordosky, Jennifer and Koren, Sergey and Lee, HoJoon and Lewis, Alexandra P. and Liao, Wen-Wei and Lu, Shuangjia and Lu, Tsung-Yu and Lucas, Julian K. and Magalh\~aes, Hugo and Marco-Sola, Santiago and Marijon, Pierre and Markello, Charles and Marschall, Tobias and Martin, Fergal J. and McCartney, Ann and McDaniel, Jennifer and Miga, Karen H. and Mitchell, Matthew W. and Mountcastle, Jacquelyn and Munson, Katherine M. and Mwaniki, Moses Njagi and Nattestad, Maria and Nurk, Sergey and Olsen, Hugh E. and Olson, Nathan D. and Pesout, Trevor and Phillippy, Adam M. and Popejoy, Alice B. and Porubsky, David and Prins, Pjotr and Puiu, Daniela and Rautiainen, Mikko and Regier, Allison A. and Rhie, Arang and Sacco, Samuel and Sanders, Ashley D. and Schneider, Valerie A. and Schultz, Baergen I. and Shafin, Kishwar and Sibbesen, Jonas A. and Sir\'en, Jouni and Smith, Michael W. and Sofia, Heidi J. and Tayoun, Ahmad N. Abou and Thibaud-Nissen, Fran\c coise and Tomlinson, Chad and Tricomi, Francesca Floriana and Villani, Flavia and Vollger, Mitchell R. and Wagner, Justin and Walenz, Brian and Wang, Ting and Wood, Jonathan M. D. and Zimin, Aleksey V. and Zook, Justin M. and Marschall, Tobias and Li, Heng and Paten, Benedict},
  date = {2024-04},
  journaltitle = {Nature Biotechnology},
  shortjournal = {Nat. Biotechnol.},
  volume = {42},
  number = {4},
  pages = {663--673},
  publisher = {Nature Publishing Group},
  issn = {1087-0156, 1546-1696},
  doi = {10.1038/s41587-023-01793-w},
  abstract = {Pangenome references address biases of reference genomes by storing a representative set of diverse haplotypes and their alignment, usually as a graph. Alternate alleles determined by variant callers can be used to construct pangenome graphs, but advances in long-read sequencing are leading to widely available, high-quality phased assemblies. Constructing a pangenome graph directly from assemblies, as opposed to variant calls, leverages the graph's ability to represent variation at different scales. Here we present the Minigraph-Cactus pangenome pipeline, which creates pangenomes directly from whole-genome alignments, and demonstrate its ability to scale to 90 human haplotypes from the Human Pangenome Reference Consortium. The method builds graphs containing all forms of genetic variation while allowing use of current mapping and genotyping tools. We measure the effect of the quality and completeness of reference genomes used for analysis within the pangenomes and show that using the CHM13 reference from the Telomere-to-Telomere Consortium improves the accuracy of our methods. We also demonstrate construction of a Drosophila melanogaster pangenome.},
  langid = {american},
  keywords = {Genome informatics,Genomics}
}

@article{hurgobinSNPDiscoveryUsing2017,
  title = {{{SNP Discovery Using}} a {{Pangenome}}: {{Has}} the {{Single Reference Approach Become Obsolete}}?},
  shorttitle = {{{SNP Discovery Using}} a {{Pangenome}}},
  author = {Hurgobin, Bhavna and Edwards, David},
  date = {2017-03-11},
  journaltitle = {Biology},
  shortjournal = {Biology},
  volume = {6},
  number = {4},
  eprint = {28287462},
  eprinttype = {pubmed},
  pages = {21},
  issn = {2079-7737},
  doi = {10.3390/biology6010021},
  abstract = {Increasing evidence suggests that a single individual is insufficient to capture the genetic diversity within a species due to gene presence absence variation. In order to understand the extent to which genomic variation occurs in a species, the construction of its pangenome is necessary. The pangenome represents the complete set of genes of a species; it is composed of core genes, which are present in all individuals, and variable genes, which are present only in some individuals. Aside from variations at the gene level, single nucleotide polymorphisms (SNPs) are also an important form of genetic variation. The advent of next-generation sequencing (NGS) coupled with the heritability of SNPs make them ideal markers for genetic analysis of human, animal, and microbial data. SNPs have also been extensively used in crop genetics for association mapping, quantitative trait loci (QTL) analysis, analysis of genetic diversity, and phylogenetic analysis. This review focuses on the use of pangenomes for SNP discovery. It highlights the advantages of using a pangenome rather than a single reference for this purpose. This review also demonstrates how extra information not captured in a single reference alone can be used to provide additional support for linking genotypic data to phenotypic data.},
  langid = {american},
  pmcid = {PMC5372014},
  keywords = {assembly,copy number variation,core genome,gene,genetic diversity,pangenome,presence absence variation,single nucleotide polymorphism,SNP discovery,variable genome}
}

@article{rautiainenGraphAlignerRapidVersatile2020,
  title = {{{GraphAligner}}: Rapid and Versatile Sequence-to-Graph Alignment},
  shorttitle = {{{GraphAligner}}},
  author = {Rautiainen, Mikko and Marschall, Tobias},
  date = {2020-09-24},
  journaltitle = {Genome Biology},
  shortjournal = {Genome Biol},
  volume = {21},
  number = {1},
  eprint = {32972461},
  eprinttype = {pubmed},
  pages = {253},
  issn = {1474-760X},
  doi = {10.1186/s13059-020-02157-2},
  abstract = {Genome graphs can represent genetic variation and sequence uncertainty. Aligning sequences to genome graphs is key to many applications, including error correction, genome assembly, and genotyping of variants in a pangenome graph. Yet, so far, this step is often prohibitively slow. We present GraphAligner, a tool for aligning long reads to genome graphs. Compared to the state-of-the-art tools, GraphAligner is 13x faster and uses 3x less memory. When employing GraphAligner for error correction, we find it to be more than twice as accurate and over 12x faster than extant tools.Availability: Package manager: https://anaconda.org/bioconda/graphaligner and source code: https://github.com/maickrau/GraphAligner.},
  langid = {english},
  pmcid = {PMC7513500},
  keywords = {Error correction,Genome graphs,Long reads,Pangenome,Sequence alignment}
}

@article{sheikhizadehPanToolsRepresentationStorage2016,
  title = {{{PanTools}}: Representation, Storage and Exploration of Pan-Genomic Data},
  shorttitle = {{{PanTools}}},
  author = {Sheikhizadeh, Siavash and Schranz, M. Eric and Akdel, Mehmet and family=Ridder, given=Dick, prefix=de, useprefix=true and Smit, Sandra},
  date = {2016-09-01},
  journaltitle = {Bioinformatics},
  shortjournal = {Bioinformatics},
  volume = {32},
  number = {17},
  pages = {i487-i493},
  issn = {1367-4803},
  doi = {10.1093/bioinformatics/btw455},
  abstract = {Next-generation sequencing technology is generating a wealth of highly similar genome sequences for many species, paving the way for a transition from single-genome to pan-genome analyses. Accordingly, genomics research is going to switch from reference-centric to pan-genomic approaches. We define the pan-genome as a comprehensive representation of multiple annotated genomes, facilitating analyses on the similarity and divergence of the constituent genomes at the nucleotide, gene and genome structure level. Current pan-genomic approaches do not thoroughly address scalability, functionality and usability.We introduce a generalized De Bruijn graph as a pan-genome representation, as well as an online algorithm to construct it. This representation is stored in a Neo4j graph database, which makes our approach scalable to large eukaryotic genomes. Besides the construction algorithm, our software package, called PanTools, currently provides functionality for annotating pan-genomes, adding sequences, grouping genes, retrieving gene sequences or genomic regions, reconstructing genomes and comparing and querying pan-genomes. We demonstrate the performance of the tool using datasets of 62 E. coli genomes, 93 yeast genomes and 19 Arabidopsis thaliana genomes.The Java implementation of PanTools is publicly available at http://www.bif.wur.nl.sandra.smit@wur.nl},
  langid = {english}
}

@article{xiaoBriefReviewSoftware2015,
  title = {A {{Brief Review}} of {{Software Tools}} for {{Pangenomics}}},
  author = {Xiao, Jingfa and Zhang, Zhewen and Wu, Jiayan and Yu, Jun},
  date = {2015-02-01},
  journaltitle = {Genomics, Proteomics \& Bioinformatics},
  shortjournal = {Genomics, Proteomics \& Bioinformatics},
  volume = {13},
  number = {1},
  pages = {73--76},
  issn = {1672-0229},
  doi = {10.1016/j.gpb.2015.01.007},
  abstract = {Since the proposal for pangenomic study, there have been a dozen software tools actively in use for pangenomic analysis. By the end of 2014, Panseq and the pan-genomes analysis pipeline (PGAP) ranked as the top two most popular packages according to cumulative citations of peer-reviewed scientific publications. The functions of the software packages and tools, albeit variable among them, include categorizing orthologous genes, calculating pangenomic profiles, integrating gene annotations, and constructing phylogenies. As epigenomic elements are being gradually revealed in prokaryotes, it is expected that pangenomic databases and toolkits have to be extended to handle information of detailed functional annotations for genes and non-protein-coding sequences including non-coding RNAs, insertion elements, and conserved structural elements. To develop better bioinformatic tools, user feedback and integration of novel features are both of essence.},
  langid = {english},
  keywords = {Comparative analysis,Core genes,Genomic dynamics,Pangenome,Pangenomics}
}

@online{yuanPanGraphViewerVersatileTool2023,
  title = {{{PanGraphViewer}}: A Versatile Tool to Visualize Pangenome Graphs},
  shorttitle = {{{PanGraphViewer}}},
  author = {Yuan, Yuxuan and Ma, Ricky Ka-Kui and Chan, Ting-Fung},
  date = {2023-04-02},
  eprinttype = {bioRxiv},
  eprintclass = {New Results},
  pages = {2023.03.30.534931},
  doi = {10.1101/2023.03.30.534931},
  abstract = {Pangenome graphs provide a powerful way to present both sequence and structural features in a given genome relative to the typical features of a population. There are different methods of building pangenome graphs, but few tools are available to visualize them. To address this problem, we developed PanGraphViewer, which is written in Python 3 and runs on all major operating systems. The PanGraphViewer package contains two separate versions: a desktop-based application and a web-based application. Compared to other graph viewers that are initially designed to visualize individual genome graphs, PanGraphViewer targets pangenome graphs and allows the viewing of pangenome graphs built from multiple genomes in either the (reference) graphical fragment assembly format or the variant call format (VCF). Apart from visualization of different types of structural variations (SV), PanGraphViewer also integrates genome annotations with graph nodes to analyze insertions or deletions in a particular gene model. The graph node shapes in PanGraphViewer can represent different types of genomic variations when a VCF file is used. Notably, PanGraphViewer displays subgraphs from a chromosome or sequence segment based on any given coordinates. This function is absent from most genome graph viewers. PanGraphViewer is freely available at https://github.com/TF-Chan-Lab/panGraphViewer to facilitate pangenome analysis.},
  langid = {english},
  pubstate = {prepublished}
}
